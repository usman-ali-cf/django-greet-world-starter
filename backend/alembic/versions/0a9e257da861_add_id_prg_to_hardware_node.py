"""add_id_prg_to_hardware_node

Revision ID: 0a9e257da861
Revises: 306232e800d9
Create Date: 2025-07-19 22:11:53.785178

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0a9e257da861'
down_revision: Union[str, Sequence[str], None] = '306232e800d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # First add the column as nullable
    op.add_column('t_nodo_hw', sa.Column('id_prg', sa.Integer(), nullable=True))
    
    # Update existing records to set id_prg based on the related node's id_prg
    op.execute("""
        UPDATE t_nodo_hw 
        SET id_prg = (
            SELECT n.id_prg 
            FROM t_nodo n 
            WHERE n.id_nodo = t_nodo_hw.id_nodo
        )
    """)
    
    # Now make the column non-nullable
    op.alter_column('t_nodo_hw', 'id_prg', nullable=False)
    
    # Create the foreign key constraint
    op.create_foreign_key(None, 't_nodo_hw', 't_progetti', ['id_prg'], ['id_prg'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 't_nodo_hw', type_='foreignkey')
    op.drop_column('t_nodo_hw', 'id_prg')
    # ### end Alembic commands ###
