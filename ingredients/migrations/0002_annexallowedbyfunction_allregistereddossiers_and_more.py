# Generated by Django 5.0.1 on 2025-04-13 20:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("ingredients", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnnexAllowedByFunction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "ingredients_link",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ingredients Link",
                    ),
                ),
                (
                    "no_of_ingredients",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Number of Ingredients"
                    ),
                ),
            ],
            options={
                "verbose_name": "Annex Allowed By Function",
                "verbose_name_plural": "Annex Allowed By Functions",
            },
        ),
        migrations.CreateModel(
            name="ALLRegisteredDossiers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ec_list_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="EC / List Number",
                    ),
                ),
                (
                    "cas_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS Number"
                    ),
                ),
                (
                    "echa_chem_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="ECHA CHEM ID",
                    ),
                ),
                (
                    "registration_status",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Registration Status",
                    ),
                ),
                (
                    "registration_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Registration Type",
                    ),
                ),
                (
                    "submission_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Submission Type",
                    ),
                ),
                (
                    "total_tonnage_band",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Total Tonnage Band",
                    ),
                ),
                (
                    "tonnage_band_min",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Tonnage Band Min",
                    ),
                ),
                (
                    "tonnage_band_max",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Tonnage Band Max",
                    ),
                ),
                (
                    "last_updated",
                    models.DateField(
                        blank=True, null=True, verbose_name="Last Updated"
                    ),
                ),
                (
                    "factsheet_url",
                    models.URLField(
                        blank=True,
                        null=True,
                        verbose_name="Factsheet URL COMPLEX COMPONENTS + PHYS/CHEM PROPS + TOX",
                    ),
                ),
                (
                    "substance_information_page",
                    models.URLField(
                        blank=True, null=True, verbose_name="Substance Information Page"
                    ),
                ),
                (
                    "echa_chem_dossier",
                    models.URLField(
                        blank=True, null=True, verbose_name="ECHA CHEM DOSSIER"
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registered_dossiers",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "ALL Registered Dossier",
                "verbose_name_plural": "ALL Registered Dossiers",
            },
        ),
        migrations.CreateModel(
            name="AnnexIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ingredients",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ingredients",
                    ),
                ),
                (
                    "cas_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS Number"
                    ),
                ),
                (
                    "ec_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="EC Number"
                    ),
                ),
                (
                    "annex_ref",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Annex Reference",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "sccs_opinions",
                    models.TextField(
                        blank=True, null=True, verbose_name="SCCS Opinions"
                    ),
                ),
                (
                    "regulation",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Regulation"
                    ),
                ),
                (
                    "other_directives",
                    models.TextField(
                        blank=True, null=True, verbose_name="Other Directives"
                    ),
                ),
                (
                    "chemical_iupac_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="Chemical IUPAC Name"
                    ),
                ),
                (
                    "indentified_ingredients",
                    models.TextField(
                        blank=True, null=True, verbose_name="Identified Ingredients"
                    ),
                ),
                (
                    "cmp",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="CMP"
                    ),
                ),
                (
                    "cmr",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="CMR"
                    ),
                ),
                (
                    "update_date",
                    models.DateField(blank=True, null=True, verbose_name="Update Date"),
                ),
                (
                    "is_prohibited",
                    models.BooleanField(default=False, verbose_name="Is Prohibited"),
                ),
                (
                    "is_restricted",
                    models.BooleanField(default=False, verbose_name="Is Restricted"),
                ),
                (
                    "product_type_body_parts",
                    models.TextField(
                        blank=True, null=True, verbose_name="Product Type, Body Parts"
                    ),
                ),
                (
                    "maximum_concentration",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Maximum Concentration in Ready for Use Preparation",
                    ),
                ),
                (
                    "other",
                    models.TextField(blank=True, null=True, verbose_name="Other"),
                ),
                (
                    "wording_of_conditions_use_warning",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Wording of Conditions Use Warning",
                    ),
                ),
                (
                    "is_coloraants_allowed",
                    models.BooleanField(
                        default=False, verbose_name="Is Colorants Allowed"
                    ),
                ),
                (
                    "colour_index_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Colour Index Number / Name of Common Ingredients Glossary",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Color"
                    ),
                ),
                (
                    "is_preservative_allowed",
                    models.BooleanField(
                        default=False, verbose_name="Is Preservative Allowed"
                    ),
                ),
                (
                    "is_uv_filter_allowed",
                    models.BooleanField(
                        default=False, verbose_name="Is UV Filter Allowed"
                    ),
                ),
                (
                    "function_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annex_ingredients",
                        to="ingredients.annexallowedbyfunction",
                        verbose_name="Function Type",
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annex_entries",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Annex Ingredient",
                "verbose_name_plural": "Annex Ingredients",
            },
        ),
        migrations.CreateModel(
            name="CIRReportNOAELDAP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ingredient_name_used",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ingredient Name Used",
                    ),
                ),
                (
                    "inci_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="INCI Name"
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cir_report_entries",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "CIR Report NOAEL DAP",
                "verbose_name_plural": "CIR Report NOAEL DAP Entries",
            },
        ),
        migrations.CreateModel(
            name="COSMOSTOX",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dataset",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="DATASET"
                    ),
                ),
                (
                    "cosmos_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="COSMOS ID"
                    ),
                ),
                (
                    "cas_rn",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS RN"
                    ),
                ),
                (
                    "cosmos_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="COSMOS Name",
                    ),
                ),
                (
                    "inci_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="INCI Name"
                    ),
                ),
                (
                    "munro_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Munro Name"
                    ),
                ),
                (
                    "cramer_classes_by_cosmos",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Cramer Classes by COSMOS",
                    ),
                ),
                (
                    "cramer_class_source",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="CRAMER CLASS SOURCE",
                    ),
                ),
                (
                    "in_cosmos_inventory",
                    models.BooleanField(
                        default=False, verbose_name="In COSMOS Inventory?"
                    ),
                ),
                (
                    "purity",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Purity (%)"
                    ),
                ),
                (
                    "active",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Active (%)"
                    ),
                ),
                (
                    "test_substance_comments",
                    models.TextField(
                        blank=True, null=True, verbose_name="Test Substance Comments"
                    ),
                ),
                (
                    "study_type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Study Type"
                    ),
                ),
                (
                    "species",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Species"
                    ),
                ),
                (
                    "route_of_exposure",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Route of Exposure",
                    ),
                ),
                (
                    "duration_with_unit",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Duration with Unit",
                    ),
                ),
                (
                    "doses_with_unit",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Doses with Unit",
                    ),
                ),
                (
                    "dose_comments",
                    models.TextField(
                        blank=True, null=True, verbose_name="Dose Comments"
                    ),
                ),
                (
                    "original_noael",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Original NOAEL (mg/kg-bw/day)",
                    ),
                ),
                (
                    "original_loael",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Original LOAEL (mg/kg-bw/day)",
                    ),
                ),
                (
                    "noael_loael_owner",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="NOAEL/LOAEL Owner",
                    ),
                ),
                (
                    "adjustment_factor_dose_duration",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Adjustment Factor: Dose Duration",
                    ),
                ),
                (
                    "adjustment_factor_loel_noel_extrapolation",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Adjustment Factor: LOEL-NOEL Extrapolation",
                    ),
                ),
                (
                    "calculated_pod",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Calculated POD (NOAEL/LOAEL) for COSMOS TTC",
                    ),
                ),
                (
                    "pod_base_source",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="POD BASE SOURCE",
                    ),
                ),
                (
                    "target_sites",
                    models.TextField(
                        blank=True, null=True, verbose_name="Target Sites"
                    ),
                ),
                (
                    "critical_effects",
                    models.TextField(
                        blank=True, null=True, verbose_name="Critical Effects"
                    ),
                ),
                (
                    "critical_effects_details",
                    models.TextField(
                        blank=True, null=True, verbose_name="Critical Effects Details"
                    ),
                ),
                (
                    "noael_reliability_method",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="NOAEL Reliability Method",
                    ),
                ),
                (
                    "noael_reliability_value",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="NOAEL Reliability Value",
                    ),
                ),
                (
                    "study_reliability",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Study Reliability",
                    ),
                ),
                (
                    "guideline_glp",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Guideline / GLP",
                    ),
                ),
                (
                    "qc_status",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="QC Status"
                    ),
                ),
                (
                    "qc_rationale",
                    models.TextField(
                        blank=True, null=True, verbose_name="QC Rationale"
                    ),
                ),
                (
                    "document_source",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Document Source",
                    ),
                ),
                (
                    "document_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Document Number",
                    ),
                ),
                (
                    "database_source",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Database Source",
                    ),
                ),
                (
                    "original_study_citation",
                    models.TextField(
                        blank=True, null=True, verbose_name="Original Study Citation"
                    ),
                ),
                (
                    "study_title",
                    models.TextField(blank=True, null=True, verbose_name="Study Title"),
                ),
                (
                    "primary_reference_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="PRIMARY REFERENCE TYPE",
                    ),
                ),
                (
                    "database_report_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="DATABASE REPORT NUMBER",
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cosmos_tox_entries",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "COSMOS TOX",
                "verbose_name_plural": "COSMOS TOX Entries",
            },
        ),
        migrations.CreateModel(
            name="ECHACLPHazard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "index_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Index No"
                    ),
                ),
                (
                    "international_chemical_identification",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="International Chemical Identification",
                    ),
                ),
                (
                    "ec_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="EC No"
                    ),
                ),
                (
                    "cas_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS No"
                    ),
                ),
                (
                    "classification_hazard_class_category_codes",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Classification Hazard Class and Category Code(s)",
                    ),
                ),
                (
                    "classification_hazard_statement_codes",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Classification Hazard Statement Code(s)",
                    ),
                ),
                (
                    "labelling_pictogram_signal_word_codes",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Labelling Pictogram, Signal Word Code(s)",
                    ),
                ),
                (
                    "labelling_hazard_statement_codes",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Labelling Hazard Statement Code(s)",
                    ),
                ),
                (
                    "labelling_suppliment_hazard_statement_codes",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Labelling Suppliment Hazard Statement Code(s)",
                    ),
                ),
                (
                    "specific_conc_limits_m_factors",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Specific Conc. Limits, M-factors",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                (
                    "atp_inserted_updated",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ATP inserted/ATP Updated",
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="echa_clp_hazards",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "ECHA CLP Hazard",
                "verbose_name_plural": "ECHA CLP Hazards",
            },
        ),
        migrations.CreateModel(
            name="ECHANanomaterialAllowed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ec_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="EC Name"
                    ),
                ),
                (
                    "ec_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="EC Number"
                    ),
                ),
                (
                    "cas_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS Number"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Type"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="echa_nanomaterials",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "ECHA Nanomaterial Allowed",
                "verbose_name_plural": "ECHA Nanomaterials Allowed",
            },
        ),
        migrations.CreateModel(
            name="EFSAJECFAFOODNoNOEAL",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Type"
                    ),
                ),
                (
                    "cas_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS No."
                    ),
                ),
                (
                    "ec_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="EC No."
                    ),
                ),
                (
                    "food_additive_group",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Food Additive Group",
                    ),
                ),
                (
                    "efsa_ingredient_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="EFSA Ingredient Name",
                    ),
                ),
                (
                    "synonym_names",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Synonym Name(s) (From EFSA Datasheet)",
                    ),
                ),
                (
                    "conditions_of_use",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Conditions of use (From EFSA Datasheet)",
                    ),
                ),
                (
                    "legislations",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Legislations (From EFSA datasheet, specifically for GROUPS)",
                    ),
                ),
                (
                    "fl_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="FL No."
                    ),
                ),
                (
                    "coe_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CoE No."
                    ),
                ),
                (
                    "un_fao",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="UN-FAO"
                    ),
                ),
                (
                    "jecfa_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="JECFA No"
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="efsa_jecfa_entries",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "EFSA JECFA FOOD No NOEAL",
                "verbose_name_plural": "EFSA JECFA FOOD No NOEAL Entries",
            },
        ),
        migrations.CreateModel(
            name="EFSAVitaminMinerals",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Type"
                    ),
                ),
                ("link", models.URLField(blank=True, null=True, verbose_name="Link")),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="efsa_vitamin_minerals",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "EFSA Vitamin Mineral",
                "verbose_name_plural": "EFSA Vitamin Minerals",
            },
        ),
        migrations.CreateModel(
            name="IFRAAllFRTransparencyList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cas_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS Number"
                    ),
                ),
                (
                    "name_of_fragrance_ingredients",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Name of Fragrance Ingredients",
                    ),
                ),
                (
                    "naturals_ncs_category",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="NATURALS NCS CATEGORY",
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ifra_transparency_entries",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "IFRA All FR Transparency List",
                "verbose_name_plural": "IFRA All FR Transparency Lists",
            },
        ),
        migrations.CreateModel(
            name="IFRAFragranceRPS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cas_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS Number"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Title"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Type"
                    ),
                ),
                (
                    "amendments",
                    models.TextField(blank=True, null=True, verbose_name="Amendments"),
                ),
                ("link", models.URLField(blank=True, null=True, verbose_name="Link")),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ifra_fragrance_rps",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "IFRA Fragrance RPS",
                "verbose_name_plural": "IFRA Fragrance RPS",
            },
        ),
        migrations.CreateModel(
            name="IUPAC",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ingredient_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ingredient Name",
                    ),
                ),
                (
                    "inn_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="INN Name"
                    ),
                ),
                (
                    "ph_eur_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ph. Eur. Name",
                    ),
                ),
                (
                    "cas_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS Number"
                    ),
                ),
                (
                    "ec_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="EC Number"
                    ),
                ),
                (
                    "einecs_elincs_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="EINECS/ELINCS Number",
                    ),
                ),
                (
                    "chemical_iupac_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="Chemical IUPAC Name"
                    ),
                ),
                (
                    "restriction",
                    models.TextField(blank=True, null=True, verbose_name="Restriction"),
                ),
                (
                    "function",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Function"
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="iupac_entries",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "IUPAC",
                "verbose_name_plural": "IUPAC Entries",
            },
        ),
        migrations.CreateModel(
            name="SCCSOpinions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sccs_opinion_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="SCCS Opinion Name",
                    ),
                ),
                (
                    "ingredient_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ingredient Name",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Type"
                    ),
                ),
                (
                    "cas_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="CAS No."
                    ),
                ),
                (
                    "ec_no",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="EC No."
                    ),
                ),
                (
                    "sccs_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="SCCS Number",
                    ),
                ),
                (
                    "adopted_on",
                    models.DateField(blank=True, null=True, verbose_name="Adopted on"),
                ),
                ("link", models.URLField(blank=True, null=True, verbose_name="Link")),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sccs_opinions",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "SCCS Opinion",
                "verbose_name_plural": "SCCS Opinions",
            },
        ),
        migrations.CreateModel(
            name="TOXRICLD50",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "taid",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="TAID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "iupac_name",
                    models.TextField(blank=True, null=True, verbose_name="IUPAC Name"),
                ),
                (
                    "pubchem_cid",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="PubChem CID",
                    ),
                ),
                (
                    "canonical_smiles",
                    models.TextField(
                        blank=True, null=True, verbose_name="Canonical SMILES"
                    ),
                ),
                (
                    "inchikey",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="InChIKey"
                    ),
                ),
                (
                    "toxicity_value",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Toxicity Value",
                    ),
                ),
                (
                    "ld50_toxicity_category",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="LD50 Toxicity Category",
                    ),
                ),
                (
                    "is_toxicity",
                    models.BooleanField(default=False, verbose_name="Is Toxicity"),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="toxric_ld50_entries",
                        to="ingredients.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "TOXRIC LD50",
                "verbose_name_plural": "TOXRIC LD50 Entries",
            },
        ),
    ]
