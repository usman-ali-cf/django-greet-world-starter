# Generated by Django 5.0.1 on 2025-04-07 19:47

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AgeCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                ("category", models.CharField(max_length=100)),
                (
                    "body_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Body Weight"
                    ),
                ),
                (
                    "surface_area",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Surface Area"
                    ),
                ),
            ],
            options={
                "verbose_name": "Age Category",
                "verbose_name_plural": "Age Categories",
                "ordering": ["category"],
            },
        ),
        migrations.CreateModel(
            name="FrameFormulation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "formulation_num",
                    models.CharField(max_length=50, verbose_name="Formulation Number"),
                ),
            ],
            options={
                "verbose_name": "Frame Formulation",
                "verbose_name_plural": "Frame Formulations",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="IFRACategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                ("description", models.TextField()),
                ("code", models.CharField(max_length=50)),
                ("category", models.CharField(max_length=100)),
                (
                    "type_of_prod",
                    models.CharField(max_length=100, verbose_name="Type of Product"),
                ),
            ],
            options={
                "verbose_name": "IFRA Category",
                "verbose_name_plural": "IFRA Categories",
                "ordering": ["category"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                ("code", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=100)),
                (
                    "category_num",
                    models.CharField(max_length=50, verbose_name="Category Number"),
                ),
            ],
            options={
                "verbose_name": "Product Category",
                "verbose_name_plural": "Product Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="IngredientType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                ("type", models.CharField(max_length=100)),
                ("example", models.TextField(blank=True, null=True)),
                (
                    "concentration",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "frame_formulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingredient_types",
                        to="products.frameformulation",
                        verbose_name="Frame Formulation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ingredient Type",
                "verbose_name_plural": "Ingredient Types",
                "ordering": ["type"],
            },
        ),
        migrations.CreateModel(
            name="ProductSubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                ("code", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=100)),
                (
                    "sub_category_num",
                    models.CharField(max_length=50, verbose_name="Sub-Category Number"),
                ),
                (
                    "sccs_product_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="products.productcategory",
                        verbose_name="Product Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Sub-Category",
                "verbose_name_plural": "Product Sub-Categories",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="frameformulation",
            name="sccs_product_sub_cat",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="frame_formulations",
                to="products.productsubcategory",
                verbose_name="Product Sub-Category",
            ),
        ),
        migrations.CreateModel(
            name="ProductType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                ("code", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=100)),
                (
                    "est_qx",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Estimated Quantity",
                    ),
                ),
                (
                    "sccs_prod_cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_types",
                        to="products.productcategory",
                        verbose_name="Product Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Type",
                "verbose_name_plural": "Product Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                (
                    "primary_exposure_route",
                    models.CharField(
                        max_length=100, verbose_name="Primary Exposure Route"
                    ),
                ),
                (
                    "foreseeable_exposure_route",
                    models.CharField(
                        max_length=100, verbose_name="Foreseeable Exposure Route"
                    ),
                ),
                (
                    "leave_on_or_rinse_off_status",
                    models.CharField(
                        choices=[("LEAVE_ON", "Leave On"), ("RINSE-OFF", "Rinse Off")],
                        max_length=10,
                        verbose_name="Leave On or Rinse-Off Status",
                    ),
                ),
                (
                    "age_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.agecategory",
                        verbose_name="Age Category",
                    ),
                ),
                (
                    "ifra_ora_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.ifracategory",
                        verbose_name="IFRA/ORA Category",
                    ),
                ),
                (
                    "sccs_primary_prod_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_products",
                        to="products.producttype",
                        verbose_name="Primary Product Type",
                    ),
                ),
                (
                    "sccs_secondary_prod_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="secondary_products",
                        to="products.producttype",
                        verbose_name="Secondary Product Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "SCCS Product",
                "verbose_name_plural": "SCCS Products",
                "ordering": ["unique_id"],
            },
        ),
        migrations.CreateModel(
            name="AllowedProductTypeByAge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unique_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Unique ID"
                    ),
                ),
                (
                    "age_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allowed_product_types",
                        to="products.agecategory",
                        verbose_name="Age Category",
                    ),
                ),
                (
                    "sccs_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allowed_age_types",
                        to="products.product",
                        verbose_name="SCCS Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Allowed Product Type By Age",
                "verbose_name_plural": "Allowed Product Types By Age",
                "unique_together": {("sccs_product", "age_category")},
            },
        ),
    ]
